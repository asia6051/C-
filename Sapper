#include<bits/stdc++.h>
using namespace std;
int n, a, b;
char co;
int gra[1007][1007], saper[1007][1007]; 
void f(){ // uzupełnia ilosc bomb w pobliżu konkretnego pola
	int ile=0;
	for(int y=1; y<=n; y++){
		for(int x=1; x<=n; x++){
			if(gra[x][y]==1){
				if(x-1>0 and y-1>0 and gra[x-1][y-1]==2) ile++;//LG
				if(y-1>0 and gra[x][y-1]==2) ile++; //G 
				if(x+1<=n and y-1>0 and gra[x+1][y-1]==2) ile++; //PG
				if(x+1<=n and gra[x+1][y]==2) ile++; //P
				if(x+1<=n and y+1<=n and gra[x+1][y+1]==2) ile++;//PD
				if(y+1<=n and gra[x][y+1]==2) ile++; //D
				if(x-1>0 and y+1<=n and gra[x-1][y+1]==2) ile++; //LD
				if(x-1>0 and gra[x-1][y]==2) ile++; //L
				saper[x][y]=ile;
				ile=0;
			}
		}
	}
}
void g(int x, int y){
		saper[x][y]=-1;

		if(x>=2 and saper[x-1][y]==0)
		{
			g(x-1,y);
		}
		if(x<=n-1 and saper[x+1][y]==0)
		{
			g(x+1,y);
		}
		if(y>=2 and saper[x][y-1]==0)
		{
			g(x,y-1);
		}
		if(y<=n-1 and saper[x][y+1]==0)
		{
			g(x,y+1);
		}
}
int main()
{
    
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

cin >> n;
for(int y=1; y<=n; y++){
	for(int x=1; x<=n; x++){
		cin >> co;
		if(co=='.') gra[x][y]=1; // 1-puste, 2-bomba
		if(co=='#') {
			gra[x][y]=2;
		}
	}
}
cin >> a >> b;
if(gra[a][b]==2){
	cout << "BUM!";
	return 0;
}
f();
if(saper[a][b]>0){
	for(int y=1; y<=n; y++){
		for(int x=1; x<=n; x++){
			if(x==a and y==b){
				cout << saper[x][y];
			}
			else cout << ".";
		}
		cout << endl;
	}
	return 0;
}
bool tak=false, cos=0;
g(a,b);

	for(int y=1; y<=n; y++){
		for(int x=1; x<=n; x++){
			if(saper[x][y]==-1){
				cout << "x"; cos=1;
			} 
			else if(saper[x][y]!=-1){
				if(x>=2 and saper[x-1][y]==-1) tak=true;
				if(x<=n-1 and saper[x+1][y]==-1)tak=true;
				if(y>=2 and saper[x][y-1]==-1) tak=true;
				if(y<=n-1 and saper[x][y+1]==-1)tak=true;
			}
			if(tak){
				cout << saper[x][y];
				tak=false; cos=1;
			}
			if(cos==0) cout <<".";
			cos=0;
			tak=0;
		}
				
		cout << endl;
	}

/*for(int y=1; y<=n; y++){
	for(int x=1; x<=n; x++){
		cout << saper[x][y];
	}
	cout << endl;
}*/
   return 0; 
}
